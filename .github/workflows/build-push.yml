name: Build, Push, and Deploy Backend to Kubernetes

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      HARBOR_REGISTRY: ${{ secrets.HARBOR_REGISTRY }}
      HARBOR_PROJECT: build
      REPO_NAME: exam-app
      HARBOR_USERNAME: ${{ secrets.HARBOR_USERNAME }}
      HARBOR_PASSWORD: ${{ secrets.HARBOR_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Harbor
        uses: docker/login-action@v3
        with:
          registry: ${{ env.HARBOR_REGISTRY }}
          username: ${{ env.HARBOR_USERNAME }}
          password: ${{ env.HARBOR_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.HARBOR_REGISTRY }}/${{ env.HARBOR_PROJECT }}/${{ env.REPO_NAME }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.28.15'

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: 'v3.18.3'

      - name: Configure kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > $HOME/.kube/config
          chmod 600 $HOME/.kube/config

      - name: Verify cluster access
        run: kubectl get nodes

      - name: Create imagePullSecret for Harbor
        run: |
          kubectl create secret docker-registry harbor-secret \
            --namespace default \
            --docker-server=${{ env.HARBOR_REGISTRY }} \
            --docker-username=${{ env.HARBOR_USERNAME }} \
            --docker-password=${{ env.HARBOR_PASSWORD }} \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Deploy backend using Helm
        working-directory: ./helm/exam-app
        run: |
          helm upgrade --install exam-app . \
            --namespace default \
            --set image.repository=${{ env.HARBOR_REGISTRY }}/${{ env.HARBOR_PROJECT }}/${{ env.REPO_NAME }} \
            --set image.tag=${{ github.sha }} \
            --set image.pullSecret=harbor-secret

      - name: Test backend with curl
        run: |
          # wait for pods to start
          sleep 10
          kubectl get svc exam-app -o wide
          echo "Replace with your curl command to test the backend"
